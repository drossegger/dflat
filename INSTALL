COMPILING

To compile D-FLAT, the following dependencies are required:
- CMake (http://cmake.org/), version 2.8.8 or later
- Boost (http://boost.org/), version 1.49.0 or later
- Gringo (http://potassco.sourceforge.net/), version 3.0.4 or later -- in particular libgringo
- Clasp (http://potassco.sourceforge.net/), version 2.0.5 or later -- in particular libclasp
- GMP (http://gmplib.org/), version 5.0.4 or later -- make sure to also compile the C++ interface
- SHARP (http://www.dbai.tuwien.ac.at/research/project/sharp/) with D-FLAT-specific modifications, for now provided only on the D-FLAT website, http://dbai.tuwien.ac.at/research/project/dynasp/dflat/

Compilation was tested with the stated version numbers and GCC 4.7.0. Unless the developers of the dependencies introduce incompatible changes, later versions should work too. If you run into any problems with later releases, try compiling D-FLAT with the version specified above.

You need to adjust the paths in D-FLAT's Makefile. In particular, the variables gringo_dir, clasp_dir and sharp_dir.

Then, running "make" in the D-FLAT top-level directory should build the binary at build/release/dflat.

---

TROUBLESHOOTING

Make sure that Gringo, Clasp, SHARP and D-FLAT are built with the same C++ preprocessor defines. In particular, for the debug build, Gringo by default uses defines like -DGLIBCXX_DEBUG which Clasp's debug build does not use. Since I had some problem with Clasp when defining these flags, I would recommend NOT compiling Gringo with them.

libclasp unfortunately uses non-standard language constructs and therefore does not compile with the -pedantic compiler flag. If your compiler complains about such errors, try removing the -pedantic flag from src/CMakeLists.txt.

If you run into problems regarding Gringo in combination with Lua, consider removing -DWITH_LUA=shipped from Gringo's Makefile.

Gringo 3.0.4 requires a patch in order to compile on the tested configuration. Add
#include <gringo/domain.h>
to the includes of libgringo/src/parser.{r2c,cpp}.
See https://sourceforge.net/tracker/index.php?func=detail&aid=3465434&group_id=238741&atid=1107486

Gringo as of 3.0.4 has the indecency to issue warnings on stderr without asking. These warnings often do not hint at errors in the ASP program and will almost certainly occur with your encodings when you use D-FLAT. You are encouraged to comment-out the following lines in libgringo/src/stmdep.cpp:
			if(pred.empty() && !pred.pred()->dom()->external())
			{
				std::cerr << "% warning: ";
				pred.print(g, std::cerr);
				std::cerr << " is never defined" << std::endl;
			}

---

COMPILATION FLAGS

D-FLAT supports the following preprocessor defines:

- PROGRESS_REPORT: Print a line of information when entering a tree decomposition node
- WITH_NODE_TIMER: When processing of a node is finished, print the elapsed time
- PRINT_BAG_INPUT: Print input facts regarding the current and previous bags that are passed to the user program
- PRINT_CHILD_TABLES_INPUT: Print input facts regarding child rows that are passed to the user program
- PRINT_MODELS: Print all information in a model of the user program whenever one is found
- PRINT_COMPUTED_ROWS: Print rows resulting from the user's program
- DISABLE_ASSIGNMENT_CHECK: By default, D-FLAT checks if all current vertices were assigned exactly one value and no non-current vertex is assigned; this flag disables the check.
